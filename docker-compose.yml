version: '3.8'

volumes:
  prometheus_data:
  grafana_data:
services:
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/usr/share/prometheus/console_libraries"
      - "--web.console.templates=/usr/share/prometheus/consoles"
      - "--web.enable-lifecycle"
      - "--web.route-prefix=/"
      - "--web.external-url=http://127.0.0.1:9090/prometheus"
      - "--web.listen-address=0.0.0.0:9090"
    # restart: always

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    volumes:
      - grafana_data:/var/lib/grafana
    restart: always

  node-exporter:
    image: quay.io/prometheus/node-exporter:latest
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro,rslave
    ports:
      - "9100:9100"
    pid: host
    restart: unless-stopped
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--path.rootfs=/rootfs'
      - '--web.listen-address=0.0.0.0:9100'
      - '--log.level=info'
      - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"

  brokers:
    image: amirhosseinrazlighi/server_app:latest
    deploy:
      mode: replicated
      replicas: 3
    depends_on:
      zookeepers:
        condition: service_healthy
    # entrypoint: sleep 10000
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8888"]
      interval: 25s
      timeout: 10s
      retries: 3
    environment:
      - ZOOKEEPER=sad-zookeepers-1

  zookeepers:
    image: amirhosseinrazlighi/zookeeper_app:latest
    deploy:
      mode: replicated
      replicas: 3
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8888"]
      interval: 20s
      timeout: 10s
      retries: 3
    environment:
      - ZOOKEEPER_LIST=[sad-zookeepers-1, sad-zookeepers-2, sad-zookeepers-3]

  clients:
    image: amirhosseinrazlighi/client_app:latest
    deploy:
      mode: replicated
      replicas: 2
    # entrypoint: sleep 10000
    depends_on:
      brokers:
        condition: service_healthy
      zookeepers:
        condition: service_healthy
    environment:
      - BROKER=sad-brokers-1
      - ZOOKEEPER=sad-zookeepers-1


networks:
  default:
    driver: bridge